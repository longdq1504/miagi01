{"ast":null,"code":"var _jsxFileName = \"/home/longdq08/react_project/miagi-inside-web/src/components/login/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as sessionActions from '../../actions/sessionActions';\nimport Input from '../input/Input';\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  getUserAccounts() {\n    // return fetch('https://reqres.in/api/users?page=2')\n    // .then((response) => response.json())\n    // .then((responseJson) => {\n    //   return responseJson.data;\n    // })\n    // .catch((error) => {\n    //   console.error(error);\n    // });\n    var tmpArray = [];\n    fetch('https://reqres.in/api/users?page=2').then(res => res.json()).then(data => {\n      for (var i = 0; i < data.data.length; i++) {\n        tmpArray.push({\n          \"id\": data.data[i].id,\n          \"last_name\": data.data[i],\n          last_name\n        });\n      }\n    });\n    return tmpArray;\n  } // componentDidMount() {\n  // }\n\n\n  onSubmit(history) {\n    const {\n      user\n    } = this.state;\n    const {\n      login\n    } = this.props.actions;\n    const accounts = this.getUserAccounts();\n    console.log(accounts);\n    console.log(typeof accounts);\n    console.log(accounts[0]);\n    console.log(typeof accounts[0]); //if(user.email === users[0].id && user.password===users[0].first_name)\n    //if(user.email === \"a\" && user.password===\"b\")\n\n    login(user, history); //login trong sessionActions\n  }\n\n  onChange(e) {\n    const {\n      value,\n      name\n    } = e.target;\n    const {\n      user\n    } = this.state;\n    user[name] = value;\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    const {\n      user: {\n        email,\n        password\n      }\n    } = this.state;\n    const SubmitButton = withRouter(({\n      history\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onSubmit(history),\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"Submit\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"LOGIN\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      type: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      value: password,\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst {\n  object\n} = PropTypes;\nLogin.propTypes = {\n  actions: object.isRequired\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    actions: bindActionCreators(sessionActions, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatch)(Login);","map":{"version":3,"sources":["/home/longdq08/react_project/miagi-inside-web/src/components/login/Login.js"],"names":["React","Component","PropTypes","connect","bindActionCreators","withRouter","sessionActions","Input","Login","constructor","props","context","state","user","email","password","onSubmit","bind","onChange","getUserAccounts","tmpArray","fetch","then","res","json","data","i","length","push","id","last_name","history","login","actions","accounts","console","log","e","value","name","target","setState","render","SubmitButton","object","propTypes","isRequired","mapDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,cAAZ,MAAgC,8BAAhC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AADK,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDE,EAAAA,eAAe,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,QAAQ,GAAG,EAAf;AACAC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACA,IAAL,CAAUE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAEvCN,QAAAA,QAAQ,CAACQ,IAAT,CAAc;AAAC,gBAAMH,IAAI,CAACA,IAAL,CAAUC,CAAV,EAAaG,EAApB;AAAwB,uBAAaJ,IAAI,CAACA,IAAL,CAAUC,CAAV,CAArC;AAAkDI,UAAAA;AAAlD,SAAd;AACH;AACF,KAPD;AAQA,WAAOV,QAAP;AACD,GAlC2B,CAoC5B;AAEA;;;AAEAJ,EAAAA,QAAQ,CAACe,OAAD,EAAU;AAChB,UAAM;AAAElB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEoB,MAAAA;AAAF,QAAY,KAAKtB,KAAL,CAAWuB,OAA7B;AACA,UAAMC,QAAQ,GAAG,KAAKf,eAAL,EAAjB;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,QAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC,CAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,QAAQ,CAAC,CAAD,CAA3B,EARgB,CAShB;AACA;;AACAF,IAAAA,KAAK,CAACnB,IAAD,EAAOkB,OAAP,CAAL,CAXgB,CAWM;AACvB;;AAEDb,EAAAA,QAAQ,CAACmB,CAAD,EAAI;AACV,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACA,UAAM;AAAE3B,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACAC,IAAAA,IAAI,CAAC0B,IAAD,CAAJ,GAAaD,KAAb;AACA,SAAKG,QAAL,CAAc;AAAE5B,MAAAA;AAAF,KAAd;AACD;;AAED6B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE7B,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAR,QAAgC,KAAKH,KAA3C;AACA,UAAM+B,YAAY,GAAGtC,UAAU,CAAC,CAAC;AAAE0B,MAAAA;AAAF,KAAD,kBAC9B;AACE,MAAA,OAAO,EAAE,MAAM,KAAKf,QAAL,CAAce,OAAd,CADjB;AAEE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD6B,CAA/B;AAOA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAEjB,KAFT;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,EAAE,KAAKI,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEH,QAFT;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAE,KAAKG,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAgBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAoBD;;AA1F2B;;AA6F9B,MAAM;AAAE0B,EAAAA;AAAF,IAAa1C,SAAnB;AAEAM,KAAK,CAACqC,SAAN,GAAkB;AAChBZ,EAAAA,OAAO,EAAEW,MAAM,CAACE;AADA,CAAlB;;AAIA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLf,IAAAA,OAAO,EAAE7B,kBAAkB,CAACE,cAAD,EAAiB0C,QAAjB;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAe7C,OAAO,CAAC,IAAD,EAAO4C,WAAP,CAAP,CAA2BvC,KAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as sessionActions from '../../actions/sessionActions';\nimport Input from '../input/Input';\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''      \n      }\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  getUserAccounts() {\n    // return fetch('https://reqres.in/api/users?page=2')\n    // .then((response) => response.json())\n    // .then((responseJson) => {\n    //   return responseJson.data;\n    // })\n    // .catch((error) => {\n    //   console.error(error);\n    // });\n    var tmpArray = [];\n    fetch('https://reqres.in/api/users?page=2')\n    .then(res => res.json())\n    .then(data => {\n      for (var i = 0; i < data.data.length; i++) {\n          \n          tmpArray.push({\"id\": data.data[i].id, \"last_name\": data.data[i],last_name})\n      }\n    });\n    return tmpArray;\n  }\n\n  // componentDidMount() {\n\n  // }\n\n  onSubmit(history) {\n    const { user } = this.state;\n    const { login } = this.props.actions;\n    const accounts = this.getUserAccounts();\n\n    console.log(accounts);\n    console.log(typeof(accounts));\n    console.log(accounts[0]);\n    console.log(typeof(accounts[0]));\n    //if(user.email === users[0].id && user.password===users[0].first_name)\n    //if(user.email === \"a\" && user.password===\"b\")\n    login(user, history); //login trong sessionActions\n  }\n\n  onChange(e) {\n    const { value, name } = e.target;\n    const { user } = this.state;\n    user[name] = value;\n    this.setState({ user });\n  }\n\n  render() {\n    const { user: { email, password } } = this.state;\n    const SubmitButton = withRouter(({ history }) => (\n      <button\n        onClick={() => this.onSubmit(history)}\n        type=\"submit\">Submit\n      </button>\n    ));\n\n    return (\n      <div>\n        <h3>LOGIN</h3>\n        <Input\n          name=\"email\"\n          value={email}\n          label=\"Email\"\n          type=\"email\"\n          onChange={this.onChange}\n        />\n        <Input\n          name=\"password\"\n          value={password}\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.onChange}\n        />\n        <SubmitButton />\n      </div>\n    );\n  }\n}\n\nconst { object } = PropTypes;\n\nLogin.propTypes = {\n  actions: object.isRequired\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    actions: bindActionCreators(sessionActions, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatch)(Login);\n"]},"metadata":{},"sourceType":"module"}