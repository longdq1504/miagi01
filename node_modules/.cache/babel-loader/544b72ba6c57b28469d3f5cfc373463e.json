{"ast":null,"code":"var _jsxFileName = \"/home/longdq08/react_project/miagi-inside-web/src/components/login/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as sessionActions from '../../actions/sessionActions';\nimport Input from '../input/Input';\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.getAccounts = async () => {\n      const response = await fetch('https://reqres.in/api/users?page=2');\n      const json = await response.json();\n      var accounts = [];\n\n      for (var i = 0; i < json.data.length; i++) {\n        accounts.push({\n          \"id\": json.data[i].id,\n          \"last_name\": json.data[i].last_name\n        });\n      }\n\n      return accounts;\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  } // getUserAccounts() {\n  //   var accounts = [];\n  //   fetch('https://reqres.in/api/users?page=2')\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     for (var i = 0; i < data.data.length; i++) {\n  //       accounts.push({\n  //         \"id\": data.data[i].id, \n  //         \"last_name\": data.data[i].last_name\n  //       });\n  //     }\n  //   });\n  //   return accounts;\n  // }\n\n\n  // onSubmit = async(history) => {\n  //   const { user } = this.state;\n  //   const { login } = this.props.actions;\n  //   var accounts = [];\n  //   accounts = await this.getAccounts();\n  //   for(var i = 0; i < accounts.length; i++) {\n  //     if( user.email === accounts[i].last_name && user.password === accounts[i].id.toString()) {\n  //       //{id: 7, last_name: \"Lawson\"}\n  //       console.log(\"matched!!\");\n  //       login(user, history);\n  //       return;\n  //     }\n  //   }\n  //   alert(\"Login Failed\");\n  // }\n  onSubmit(history) {\n    const {\n      user\n    } = this.state;\n    const {\n      login\n    } = this.props.actions;\n    const targetUrl = 'http://localhost:8080/api/v1.0/auth/login';\n    fetch(targetUrl, {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    }).then(response => {\n      // response.json().then(body => console.log(body));\n      console.log(response.json());\n\n      if (response.code === 0) {\n        login(user, history);\n        console.log(\"matched!!\"); //vinhvd@miagi-so.com\n      } else {\n        alert(\"Login failed!!\");\n      }\n    });\n  }\n\n  onChange(e) {\n    const {\n      value,\n      name\n    } = e.target;\n    const {\n      user\n    } = this.state;\n    user[name] = value;\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    const {\n      user: {\n        email,\n        password\n      }\n    } = this.state;\n    const SubmitButton = withRouter(({\n      history\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onSubmit(history),\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, \"Submit\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"LOGIN\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      value: \"vinhvd@miagi-so.com\",\n      label: \"Email\",\n      type: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      value: \"123456123\",\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst {\n  object\n} = PropTypes;\nLogin.propTypes = {\n  actions: object.isRequired\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    actions: bindActionCreators(sessionActions, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatch)(Login);","map":{"version":3,"sources":["/home/longdq08/react_project/miagi-inside-web/src/components/login/Login.js"],"names":["React","Component","PropTypes","connect","bindActionCreators","withRouter","sessionActions","Input","Login","constructor","props","context","getAccounts","response","fetch","json","accounts","i","data","length","push","id","last_name","state","user","email","password","onSubmit","bind","onChange","history","login","actions","targetUrl","method","headers","body","JSON","stringify","then","console","log","code","alert","e","value","name","target","setState","render","SubmitButton","object","propTypes","isRequired","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as sessionActions from '../../actions/sessionActions';\nimport Input from '../input/Input';\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''      \n      }\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // getUserAccounts() {\n  //   var accounts = [];\n  //   fetch('https://reqres.in/api/users?page=2')\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     for (var i = 0; i < data.data.length; i++) {\n  //       accounts.push({\n  //         \"id\": data.data[i].id, \n  //         \"last_name\": data.data[i].last_name\n  //       });\n  //     }\n  //   });\n  //   return accounts;\n  // }\n\n  getAccounts = async() => {\n    const response = await fetch('https://reqres.in/api/users?page=2');\n    const json = await response.json();\n    var accounts = [];\n    for (var i = 0; i < json.data.length; i++) {\n      accounts.push({\n        \"id\": json.data[i].id, \n        \"last_name\": json.data[i].last_name\n      });\n    }\n    return accounts;\n  }\n\n  // onSubmit = async(history) => {\n  //   const { user } = this.state;\n\n  //   const { login } = this.props.actions;\n  //   var accounts = [];\n  //   accounts = await this.getAccounts();\n\n  //   for(var i = 0; i < accounts.length; i++) {\n  //     if( user.email === accounts[i].last_name && user.password === accounts[i].id.toString()) {\n  //       //{id: 7, last_name: \"Lawson\"}\n  //       console.log(\"matched!!\");\n  //       login(user, history);\n  //       return;\n  //     }\n  //   }\n\n  //   alert(\"Login Failed\");\n  // }\n\n  onSubmit(history) {\n    const { user } = this.state;\n\n    const { login } = this.props.actions;\n\n    const targetUrl = 'http://localhost:8080/api/v1.0/auth/login';\n\n    fetch(targetUrl, {\n      method: \"post\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    })\n    .then( (response) => { \n      // response.json().then(body => console.log(body));\n      \n      console.log(response.json());\n      if(response.code === 0) {\n        \n        login(user, history);\n        console.log(\"matched!!\"); //vinhvd@miagi-so.com\n      } else {\n        alert(\"Login failed!!\");\n      }\n    });\n  }\n\n  onChange(e) {\n    const { value, name } = e.target;\n    const { user } = this.state;\n    user[name] = value;\n    this.setState({ user });\n  }\n\n  render() {\n    const { user: { email, password } } = this.state;\n    const SubmitButton = withRouter(({ history }) => (\n      <button\n        onClick={() => this.onSubmit(history)}\n        type=\"submit\">Submit\n      </button>\n    ));\n\n    return (\n      <div>\n        <h3>LOGIN</h3>\n        <Input\n          name=\"email\"\n          value=\"vinhvd@miagi-so.com\"\n          label=\"Email\"\n          type=\"email\"\n          onChange={this.onChange}\n        />\n        <Input\n          name=\"password\"\n          value=\"123456123\"\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.onChange}\n        />\n        <SubmitButton />\n      </div>\n    );\n  }\n}\n\nconst { object } = PropTypes;\n\nLogin.propTypes = {\n  actions: object.isRequired\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    actions: bindActionCreators(sessionActions, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatch)(Login);\n"]},"metadata":{},"sourceType":"module"}