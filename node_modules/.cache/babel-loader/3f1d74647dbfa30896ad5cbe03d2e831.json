{"ast":null,"code":"var _jsxFileName = \"/home/longdq08/react_project/miagi-inside-web/src/components/app/App.js\";\n// This component handles the App template used on every page.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Home from '../home/Home';\nimport Login from '../login/Login';\nimport PrivateRoute from '../privateRoute/PrivateRoute';\n\nconst App = ({\n  authenticated,\n  checked\n}) => /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, checked && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(PrivateRoute, {\n  exact: true,\n  path: \"/\",\n  component: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, authenticated, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 58\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  render: () => /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }),\n  path: \"/login\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n})));\n\nconst {\n  bool\n} = PropTypes;\nApp.propTypes = {\n  authenticated: bool.isRequired,\n  checked: bool.isRequired\n};\n\nconst mapState = ({\n  session\n}) => ({\n  checked: session.checked,\n  authenticated: session.authenticated\n});\n\nexport default connect(mapState)(App);","map":{"version":3,"sources":["/home/longdq08/react_project/miagi-inside-web/src/components/app/App.js"],"names":["React","PropTypes","BrowserRouter","Router","Route","connect","Home","Login","PrivateRoute","App","authenticated","checked","props","bool","propTypes","isRequired","mapState","session"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,kBACV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIA,OAAO,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,oBAAC,YAAD;AAAc,EAAA,KAAK,MAAnB;AAAoB,EAAA,IAAI,EAAC,GAAzB;AAA6B,EAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,IAAD,oBAAUF,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,KAAD;AAAO,EAAA,MAAM,EAAG,mBAAK,oBAAE,KAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAAiC,EAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CAFJ,CADF;;AAYA,MAAM;AAAEG,EAAAA;AAAF,IAAWZ,SAAjB;AAEAQ,GAAG,CAACK,SAAJ,GAAgB;AACdJ,EAAAA,aAAa,EAAEG,IAAI,CAACE,UADN;AAEdJ,EAAAA,OAAO,EAAEE,IAAI,CAACE;AAFA,CAAhB;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AACjCN,EAAAA,OAAO,EAAEM,OAAO,CAACN,OADgB;AAEjCD,EAAAA,aAAa,EAAEO,OAAO,CAACP;AAFU,CAAlB,CAAjB;;AAKA,eAAeL,OAAO,CAACW,QAAD,CAAP,CAAkBP,GAAlB,CAAf","sourcesContent":["// This component handles the App template used on every page.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Home from '../home/Home';\nimport Login from '../login/Login';\nimport PrivateRoute from '../privateRoute/PrivateRoute';\n\nconst App = ({ authenticated, checked }) => (\n  <Router>\n    { checked &&\n      <div>\n\n        <PrivateRoute exact path=\"/\" component={props => <Home {...authenticated} />} />\n        <Route render ={()=> < Login />} path=\"/login\" /> \n      </div>\n    }\n  </Router>\n);\n\nconst { bool } = PropTypes;\n\nApp.propTypes = {\n  authenticated: bool.isRequired,\n  checked: bool.isRequired\n};\n\nconst mapState = ({ session }) => ({\n  checked: session.checked,\n  authenticated: session.authenticated\n});\n\nexport default connect(mapState)(App);\n"]},"metadata":{},"sourceType":"module"}